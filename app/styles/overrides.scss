$icon-font-path: "../bower_components/bootstrap-sass-official/assets/fonts/bootstrap/";
// bower:scss
@import "bootstrap-sass-official/assets/stylesheets/_bootstrap.scss";
// endbower

@import 'fontawesome/font-awesome';
@import 'fonts';
@import 'mixins';
@import 'variables';

//Bootstrap overriders and extenders


// Typography
h1 {
    @include set(font-size, (xs: 20px, sm: 24px, md: 24px, lg: 30px) );
}
h5 {
    @include set(font-size, (xs: 12px, sm: 14px, md: 14px, lg: 16px) );
}

// Green navbar
.navbar-green {
  background-color: $coena-green-color;
  border-color: $coena-green-active-color;
  border-radius: 0;
  margin-bottom: 0;
  
  .form-control {
    border-color: $coena-green-color;
  }

  .navbar-nav {
    > li > a {
      color: $white-color;
      text-transform: uppercase;

      &:hover,
      &:focus {
        background-color: $coena-green-hover-color;
      }
    }
    > .active > a {
      &,
      &:hover,
      &:focus {
        background-color: $coena-green-active-color;
      }
    }
  }

  .navbar-toggle {
    border-color: $white-color;
    .icon-bar {
      background-color: $white-color;
    }
  }

  .navbar-collapse,
  .navbar-form {
    border-color: $coena-green-color;
  }

  // Dropdown menu items
  .navbar-nav {
    // Remove background color from open dropdown
    > .open > a {
      &,
      &:hover,
      &:focus {
        background-color: $coena-green-active-color;
      }
    }
    
    .dropdown-menu {
      background-color: $coena-green-color;
      border-color: $coena-green-active-color;
      > li > a {
        color: $white-color;
        &:hover,
        &:focus {
          background-color: $coena-green-hover-color;
        }
      }
      
      .divider {
        background-color: $coena-green-active-color;
      }
    }

    @media (max-width: $grid-float-breakpoint-max) {
      // Dropdowns get custom display when collapsed
      
      .dropdown-menu {
        background-color: $coena-light-green-color;
        border-color: $coena-green-active-color;
        > li > a {
          color: $white-color;
          &:hover,
          &:focus {
            background-color: $coena-light-green-hover-color;
          }
        }
        > .active > a {
          &,
          &:hover,
          &:focus {
            background-color: $coena-light-green-hover-color;
          }
        }
        .divider {
          background-color: $coena-green-active-color;
        }
      }
    }
  }

  .navbar-link {
    color: $white-color;
  }

  .btn-link {
    color: $white-color;
  }
}

//Fix input group submit button height
.input-group {
  .btn {
    height: 34px;
  }
}

//dark green buttons
.btn-green {
  border-color: $coena-green-color;
  background-color: $coena-dark-green-color;
  color: $white-color;
  &:hover {
    color: $white-color;
    background-color: $coena-dark-green-hover-color;
  }
  &:focus {
    color: $white-color;
    background-color: $coena-dark-green-active-color;
  }
}

//row with no padding for columns
.row-no-padding {
  margin: 0;
  [class*="col-"] {
    padding-left: 0 !important;
    padding-right: 0 !important;
  }
}

//full height row and columns {
.row-full-height {
  height: 100%;
  [class*="col-"] {
    height: 100%;
  }
}

//extend width of accordion title link
.panel-title {
  > a {
    width: 100%;
    display: inline-block;
  }
}

//breadcrumb
.breadcrumb {
  display: inline-block;
  > li:nth-child(2) {
    &:before{
      content: ": ";
      color: $coena-green-color;
      font-weight: 700;
    }
  }
}

//carousel caption background
.carousel-caption {
  background-color: rgba(0,0,0,0.6);
}

//full height modal fixes
.modal-dialog {
  &.full-height-modal {
    height: calc(100% - 60px);
    overflow: hidden;
    .modal-content {
      height: 100%;
      .modal-body {
        height: calc(100% - 58px);
        overflow: auto;
      }
    }
  }
}

// Block Grid
// Technique adapted from Foundation 5 for Bootstrap 3.
// https://github.com/zurb/foundation/blob/f755d8704123f86c281ede0b171881e2672f150d/scss/foundation/components/_block-grid.scss
// Original LESS Version by Christopher Mitchell (https://gist.github.com/ChrisTM)
// Converted to SCSS by Rasmus JÃ¼rs (https://github.com/Jursdotme)
 
[class*="block-grid-"] {
  display: block;
  margin: -($grid-gutter-width/2);
  padding: 0;
  @include clearfix();
}
 
.block-grid-item {
  display: inline;
  margin: 0;
  padding: ($grid-gutter-width/2);
  height: auto;
  float: left;
  list-style: none;
}
 
@mixin block-grid ($per-row) {
  & > .block-grid-item {
    width: (100%/$per-row);
 
    $nth-equation: #{$per-row}n+'+'+1;
    &:nth-of-type(n) { clear: none; }
    &:nth-of-type(#{$nth-equation}) { clear: both; }
  }
}
 
@mixin block-grids($size) {
  .block-grid-#{$size}-1  { @include block-grid(1);  }
  .block-grid-#{$size}-2  { @include block-grid(2);  }
  .block-grid-#{$size}-3  { @include block-grid(3);  }
  .block-grid-#{$size}-4  { @include block-grid(4);  }
  .block-grid-#{$size}-5  { @include block-grid(5);  }
  .block-grid-#{$size}-6  { @include block-grid(6);  }
  .block-grid-#{$size}-7  { @include block-grid(7);  }
  .block-grid-#{$size}-8  { @include block-grid(8);  }
  .block-grid-#{$size}-9  { @include block-grid(9);  }
  .block-grid-#{$size}-10 { @include block-grid(10); }
  .block-grid-#{$size}-11 { @include block-grid(11); }
  .block-grid-#{$size}-12 { @include block-grid(12); }
}
 
@include block-grids(xs); 
@media (min-width: $screen-sm-min) { @include block-grids(sm) }
@media (min-width: $screen-md-min) { @include block-grids(md) }
@media (min-width: $screen-lg-min) { @include block-grids(lg) }